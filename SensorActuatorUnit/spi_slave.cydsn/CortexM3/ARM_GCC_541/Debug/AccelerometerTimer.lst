ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"AccelerometerTimer.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.AccelerometerTimer_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	AccelerometerTimer_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	AccelerometerTimer_Enable, %function
  25              	AccelerometerTimer_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\AccelerometerTimer.c"
   1:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/AccelerometerTimer.c **** * File Name: AccelerometerTimer.c
   3:Generated_Source\PSoC5/AccelerometerTimer.c **** * Version 2.80
   4:Generated_Source\PSoC5/AccelerometerTimer.c **** *
   5:Generated_Source\PSoC5/AccelerometerTimer.c **** * Description:
   6:Generated_Source\PSoC5/AccelerometerTimer.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/AccelerometerTimer.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/AccelerometerTimer.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/AccelerometerTimer.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/AccelerometerTimer.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/AccelerometerTimer.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/AccelerometerTimer.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/AccelerometerTimer.c **** *  or a capture event.
  14:Generated_Source\PSoC5/AccelerometerTimer.c **** *
  15:Generated_Source\PSoC5/AccelerometerTimer.c **** * Note:
  16:Generated_Source\PSoC5/AccelerometerTimer.c **** *
  17:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
  18:Generated_Source\PSoC5/AccelerometerTimer.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/AccelerometerTimer.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/AccelerometerTimer.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/AccelerometerTimer.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/AccelerometerTimer.c **** 
  24:Generated_Source\PSoC5/AccelerometerTimer.c **** #include "AccelerometerTimer.h"
  25:Generated_Source\PSoC5/AccelerometerTimer.c **** 
  26:Generated_Source\PSoC5/AccelerometerTimer.c **** uint8 AccelerometerTimer_initVar = 0u;
  27:Generated_Source\PSoC5/AccelerometerTimer.c **** 
  28:Generated_Source\PSoC5/AccelerometerTimer.c **** 
  29:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_Init
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 2


  31:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
  32:Generated_Source\PSoC5/AccelerometerTimer.c **** *
  33:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
  34:Generated_Source\PSoC5/AccelerometerTimer.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/AccelerometerTimer.c **** *
  36:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
  37:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
  38:Generated_Source\PSoC5/AccelerometerTimer.c **** *
  39:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
  40:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
  41:Generated_Source\PSoC5/AccelerometerTimer.c **** *
  42:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/AccelerometerTimer.c **** void AccelerometerTimer_Init(void) 
  44:Generated_Source\PSoC5/AccelerometerTimer.c **** {
  45:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if(!AccelerometerTimer_UsingFixedFunction)
  46:Generated_Source\PSoC5/AccelerometerTimer.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/AccelerometerTimer.c ****             uint8 AccelerometerTimer_interruptState;
  48:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/AccelerometerTimer.c **** 
  50:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if (AccelerometerTimer_UsingFixedFunction)
  51:Generated_Source\PSoC5/AccelerometerTimer.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_CONTROL &= AccelerometerTimer_CTRL_ENABLE;
  53:Generated_Source\PSoC5/AccelerometerTimer.c **** 
  54:Generated_Source\PSoC5/AccelerometerTimer.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/AccelerometerTimer.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/AccelerometerTimer.c ****             AccelerometerTimer_CONTROL2 &= ((uint8)(~AccelerometerTimer_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/AccelerometerTimer.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/AccelerometerTimer.c **** 
  59:Generated_Source\PSoC5/AccelerometerTimer.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/AccelerometerTimer.c ****             AccelerometerTimer_CONTROL3 &= ((uint8)(~AccelerometerTimer_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/AccelerometerTimer.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/AccelerometerTimer.c **** 
  63:Generated_Source\PSoC5/AccelerometerTimer.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/AccelerometerTimer.c ****         #if (AccelerometerTimer_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/AccelerometerTimer.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/AccelerometerTimer.c ****             AccelerometerTimer_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/AccelerometerTimer.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/AccelerometerTimer.c **** 
  69:Generated_Source\PSoC5/AccelerometerTimer.c ****         #if (AccelerometerTimer_RunModeUsed == 2)
  70:Generated_Source\PSoC5/AccelerometerTimer.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/AccelerometerTimer.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/AccelerometerTimer.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/AccelerometerTimer.c ****                 AccelerometerTimer_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/AccelerometerTimer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/AccelerometerTimer.c **** 
  76:Generated_Source\PSoC5/AccelerometerTimer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/AccelerometerTimer.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/AccelerometerTimer.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/AccelerometerTimer.c ****                 AccelerometerTimer_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/AccelerometerTimer.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/AccelerometerTimer.c **** 
  82:Generated_Source\PSoC5/AccelerometerTimer.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/AccelerometerTimer.c **** 
  84:Generated_Source\PSoC5/AccelerometerTimer.c ****         #if (AccelerometerTimer_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/AccelerometerTimer.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/AccelerometerTimer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/AccelerometerTimer.c ****                 AccelerometerTimer_CONTROL2 |= AccelerometerTimer_CTRL_MODE_PULSEWIDTH;
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 3


  88:Generated_Source\PSoC5/AccelerometerTimer.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/AccelerometerTimer.c **** 
  90:Generated_Source\PSoC5/AccelerometerTimer.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/AccelerometerTimer.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/AccelerometerTimer.c ****                 AccelerometerTimer_CONTROL3 &= ((uint8)(~AccelerometerTimer_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/AccelerometerTimer.c ****                 AccelerometerTimer_CONTROL3 |= AccelerometerTimer_CTRL_RCOD;
  94:Generated_Source\PSoC5/AccelerometerTimer.c **** 
  95:Generated_Source\PSoC5/AccelerometerTimer.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/AccelerometerTimer.c ****                 AccelerometerTimer_CONTROL3 &= ((uint8)(~AccelerometerTimer_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/AccelerometerTimer.c ****                 AccelerometerTimer_CONTROL3 |= AccelerometerTimer_CTRL_ENBL;
  98:Generated_Source\PSoC5/AccelerometerTimer.c **** 
  99:Generated_Source\PSoC5/AccelerometerTimer.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/AccelerometerTimer.c ****                 AccelerometerTimer_CONTROL3 |= AccelerometerTimer_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/AccelerometerTimer.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 103:Generated_Source\PSoC5/AccelerometerTimer.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 105:Generated_Source\PSoC5/AccelerometerTimer.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_RT1 &= ((uint8)(~AccelerometerTimer_RT1_MASK));
 107:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_RT1 |= AccelerometerTimer_SYNC;
 108:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 109:Generated_Source\PSoC5/AccelerometerTimer.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_RT1 &= ((uint8)(~AccelerometerTimer_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_RT1 |= AccelerometerTimer_SYNCDSI_EN;
 112:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 113:Generated_Source\PSoC5/AccelerometerTimer.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_CONTROL2 |= AccelerometerTimer_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 117:Generated_Source\PSoC5/AccelerometerTimer.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/AccelerometerTimer.c ****     AccelerometerTimer_WritePeriod(AccelerometerTimer_INIT_PERIOD);
 119:Generated_Source\PSoC5/AccelerometerTimer.c ****     AccelerometerTimer_WriteCounter(AccelerometerTimer_INIT_PERIOD);
 120:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 121:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if (AccelerometerTimer_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_CAPTURE_COUNT_CTRL |= AccelerometerTimer_CNTR_ENABLE;
 123:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_SetCaptureCount(AccelerometerTimer_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 126:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if (!AccelerometerTimer_UsingFixedFunction)
 127:Generated_Source\PSoC5/AccelerometerTimer.c ****         #if (AccelerometerTimer_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/AccelerometerTimer.c ****             AccelerometerTimer_SetCaptureMode(AccelerometerTimer_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/AccelerometerTimer.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 131:Generated_Source\PSoC5/AccelerometerTimer.c ****         #if (AccelerometerTimer_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/AccelerometerTimer.c ****             #if (!AccelerometerTimer_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/AccelerometerTimer.c ****                 if (0u == (AccelerometerTimer_CONTROL & AccelerometerTimer__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/AccelerometerTimer.c ****                 {
 135:Generated_Source\PSoC5/AccelerometerTimer.c ****                     AccelerometerTimer_SetTriggerMode(AccelerometerTimer_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/AccelerometerTimer.c ****                 }
 137:Generated_Source\PSoC5/AccelerometerTimer.c ****             #endif /* (!AccelerometerTimer_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/AccelerometerTimer.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 140:Generated_Source\PSoC5/AccelerometerTimer.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/AccelerometerTimer.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_interruptState = CyEnterCriticalSection();
 143:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 144:Generated_Source\PSoC5/AccelerometerTimer.c ****         /* Use the interrupt output of the status register for IRQ output */
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 4


 145:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_STATUS_AUX_CTRL |= AccelerometerTimer_STATUS_ACTL_INT_EN_MASK;
 146:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 147:Generated_Source\PSoC5/AccelerometerTimer.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/AccelerometerTimer.c ****         CyExitCriticalSection(AccelerometerTimer_interruptState);
 149:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 150:Generated_Source\PSoC5/AccelerometerTimer.c ****         #if (AccelerometerTimer_EnableTriggerMode)
 151:Generated_Source\PSoC5/AccelerometerTimer.c ****             AccelerometerTimer_EnableTrigger();
 152:Generated_Source\PSoC5/AccelerometerTimer.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/AccelerometerTimer.c **** 		
 154:Generated_Source\PSoC5/AccelerometerTimer.c **** 		
 155:Generated_Source\PSoC5/AccelerometerTimer.c ****         #if (AccelerometerTimer_InterruptOnCaptureCount && !AccelerometerTimer_UDB_CONTROL_REG_REMO
 156:Generated_Source\PSoC5/AccelerometerTimer.c ****             AccelerometerTimer_SetInterruptCount(AccelerometerTimer_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/AccelerometerTimer.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 159:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_ClearFIFO();
 160:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 162:Generated_Source\PSoC5/AccelerometerTimer.c ****     AccelerometerTimer_SetInterruptMode(AccelerometerTimer_INIT_INTERRUPT_MODE);
 163:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 164:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 165:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 166:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_Enable
 168:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 169:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 170:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 171:Generated_Source\PSoC5/AccelerometerTimer.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 173:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 174:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 175:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 176:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 177:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 178:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 179:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/AccelerometerTimer.c **** void AccelerometerTimer_Enable(void) 
 181:Generated_Source\PSoC5/AccelerometerTimer.c **** {
  28              		.loc 1 181 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 182:Generated_Source\PSoC5/AccelerometerTimer.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if (AccelerometerTimer_UsingFixedFunction)
 184:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_GLOBAL_ENABLE |= AccelerometerTimer_BLOCK_EN_MASK;
 185:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_GLOBAL_STBY_ENABLE |= AccelerometerTimer_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 188:Generated_Source\PSoC5/AccelerometerTimer.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if (!AccelerometerTimer_UDB_CONTROL_REG_REMOVED || AccelerometerTimer_UsingFixedFunction)
 190:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_CONTROL |= AccelerometerTimer_CTRL_ENABLE;
  33              		.loc 1 190 0
  34 0000 024A     		ldr	r2, .L2
  35 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  36 0004 43F08003 		orr	r3, r3, #128
  37 0008 1370     		strb	r3, [r2]
  38 000a 7047     		bx	lr
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 5


  39              	.L3:
  40              		.align	2
  41              	.L2:
  42 000c 75650040 		.word	1073767797
  43              		.cfi_endproc
  44              	.LFE1:
  45              		.size	AccelerometerTimer_Enable, .-AccelerometerTimer_Enable
  46              		.section	.text.AccelerometerTimer_Stop,"ax",%progbits
  47              		.align	2
  48              		.global	AccelerometerTimer_Stop
  49              		.thumb
  50              		.thumb_func
  51              		.type	AccelerometerTimer_Stop, %function
  52              	AccelerometerTimer_Stop:
  53              	.LFB3:
 191:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 193:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 194:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 195:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_Start
 197:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 198:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 199:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 200:Generated_Source\PSoC5/AccelerometerTimer.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/AccelerometerTimer.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/AccelerometerTimer.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 204:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 205:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 206:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 207:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 208:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 209:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 210:Generated_Source\PSoC5/AccelerometerTimer.c **** * Global variables:
 211:Generated_Source\PSoC5/AccelerometerTimer.c **** *  AccelerometerTimer_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/AccelerometerTimer.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 214:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/AccelerometerTimer.c **** void AccelerometerTimer_Start(void) 
 216:Generated_Source\PSoC5/AccelerometerTimer.c **** {
 217:Generated_Source\PSoC5/AccelerometerTimer.c ****     if(AccelerometerTimer_initVar == 0u)
 218:Generated_Source\PSoC5/AccelerometerTimer.c ****     {
 219:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_Init();
 220:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 221:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_initVar = 1u;   /* Clear this bit for Initialization */
 222:Generated_Source\PSoC5/AccelerometerTimer.c ****     }
 223:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 224:Generated_Source\PSoC5/AccelerometerTimer.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/AccelerometerTimer.c ****     AccelerometerTimer_Enable();
 226:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 227:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 228:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 229:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_Stop
 231:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 232:Generated_Source\PSoC5/AccelerometerTimer.c **** *
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 6


 233:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 234:Generated_Source\PSoC5/AccelerometerTimer.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/AccelerometerTimer.c **** *  interrupts.
 236:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 237:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 238:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 239:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 240:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 241:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 242:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 243:Generated_Source\PSoC5/AccelerometerTimer.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/AccelerometerTimer.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 246:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/AccelerometerTimer.c **** void AccelerometerTimer_Stop(void) 
 248:Generated_Source\PSoC5/AccelerometerTimer.c **** {
  54              		.loc 1 248 0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 0
  57              		@ frame_needed = 0, uses_anonymous_args = 0
  58              		@ link register save eliminated.
 249:Generated_Source\PSoC5/AccelerometerTimer.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if(!AccelerometerTimer_UDB_CONTROL_REG_REMOVED || AccelerometerTimer_UsingFixedFunction)
 251:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_CONTROL &= ((uint8)(~AccelerometerTimer_CTRL_ENABLE));
  59              		.loc 1 251 0
  60 0000 024A     		ldr	r2, .L5
  61 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  62 0004 03F07F03 		and	r3, r3, #127
  63 0008 1370     		strb	r3, [r2]
  64 000a 7047     		bx	lr
  65              	.L6:
  66              		.align	2
  67              	.L5:
  68 000c 75650040 		.word	1073767797
  69              		.cfi_endproc
  70              	.LFE3:
  71              		.size	AccelerometerTimer_Stop, .-AccelerometerTimer_Stop
  72              		.section	.text.AccelerometerTimer_SetInterruptMode,"ax",%progbits
  73              		.align	2
  74              		.global	AccelerometerTimer_SetInterruptMode
  75              		.thumb
  76              		.thumb_func
  77              		.type	AccelerometerTimer_SetInterruptMode, %function
  78              	AccelerometerTimer_SetInterruptMode:
  79              	.LFB4:
 252:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 254:Generated_Source\PSoC5/AccelerometerTimer.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if (AccelerometerTimer_UsingFixedFunction)
 256:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_GLOBAL_ENABLE &= ((uint8)(~AccelerometerTimer_BLOCK_EN_MASK));
 257:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_GLOBAL_STBY_ENABLE &= ((uint8)(~AccelerometerTimer_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 260:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 261:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 262:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_SetInterruptMode
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 7


 264:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 265:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 266:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 267:Generated_Source\PSoC5/AccelerometerTimer.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/AccelerometerTimer.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/AccelerometerTimer.c **** *  be selected.
 270:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 271:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 272:Generated_Source\PSoC5/AccelerometerTimer.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/AccelerometerTimer.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 275:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 276:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 277:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 278:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/AccelerometerTimer.c **** void AccelerometerTimer_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/AccelerometerTimer.c **** {
  80              		.loc 1 280 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL0:
 281:Generated_Source\PSoC5/AccelerometerTimer.c ****     AccelerometerTimer_STATUS_MASK = interruptMode;
  86              		.loc 1 281 0
  87 0000 014B     		ldr	r3, .L8
  88 0002 1870     		strb	r0, [r3]
  89 0004 7047     		bx	lr
  90              	.L9:
  91 0006 00BF     		.align	2
  92              	.L8:
  93 0008 85650040 		.word	1073767813
  94              		.cfi_endproc
  95              	.LFE4:
  96              		.size	AccelerometerTimer_SetInterruptMode, .-AccelerometerTimer_SetInterruptMode
  97              		.section	.text.AccelerometerTimer_SoftwareCapture,"ax",%progbits
  98              		.align	2
  99              		.global	AccelerometerTimer_SoftwareCapture
 100              		.thumb
 101              		.thumb_func
 102              		.type	AccelerometerTimer_SoftwareCapture, %function
 103              	AccelerometerTimer_SoftwareCapture:
 104              	.LFB5:
 282:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 283:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 284:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 285:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_SoftwareCapture
 287:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 288:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 289:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 290:Generated_Source\PSoC5/AccelerometerTimer.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 292:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 293:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 294:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 295:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 8


 296:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 297:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 298:Generated_Source\PSoC5/AccelerometerTimer.c **** * Side Effects:
 299:Generated_Source\PSoC5/AccelerometerTimer.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 301:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/AccelerometerTimer.c **** void AccelerometerTimer_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/AccelerometerTimer.c **** {
 105              		.loc 1 303 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 0
 108              		@ frame_needed = 0, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 304:Generated_Source\PSoC5/AccelerometerTimer.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if(AccelerometerTimer_UsingFixedFunction)
 306:Generated_Source\PSoC5/AccelerometerTimer.c ****         (void)CY_GET_REG16(AccelerometerTimer_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/AccelerometerTimer.c ****     #else
 308:Generated_Source\PSoC5/AccelerometerTimer.c ****         (void)CY_GET_REG8(AccelerometerTimer_COUNTER_LSB_PTR_8BIT);
 110              		.loc 1 308 0
 111 0000 014B     		ldr	r3, .L11
 112 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 113 0004 7047     		bx	lr
 114              	.L12:
 115 0006 00BF     		.align	2
 116              	.L11:
 117 0008 04650040 		.word	1073767684
 118              		.cfi_endproc
 119              	.LFE5:
 120              		.size	AccelerometerTimer_SoftwareCapture, .-AccelerometerTimer_SoftwareCapture
 121              		.section	.text.AccelerometerTimer_ReadStatusRegister,"ax",%progbits
 122              		.align	2
 123              		.global	AccelerometerTimer_ReadStatusRegister
 124              		.thumb
 125              		.thumb_func
 126              		.type	AccelerometerTimer_ReadStatusRegister, %function
 127              	AccelerometerTimer_ReadStatusRegister:
 128              	.LFB6:
 309:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif/* (AccelerometerTimer_UsingFixedFunction) */
 310:Generated_Source\PSoC5/AccelerometerTimer.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 312:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 313:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 314:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_ReadStatusRegister
 316:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 317:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 318:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 319:Generated_Source\PSoC5/AccelerometerTimer.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/AccelerometerTimer.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/AccelerometerTimer.c **** *  be permuteable.
 322:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 323:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 324:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 325:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 326:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 327:Generated_Source\PSoC5/AccelerometerTimer.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/AccelerometerTimer.c **** *
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 9


 329:Generated_Source\PSoC5/AccelerometerTimer.c **** * Side Effects:
 330:Generated_Source\PSoC5/AccelerometerTimer.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 332:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/AccelerometerTimer.c **** uint8   AccelerometerTimer_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/AccelerometerTimer.c **** {
 129              		.loc 1 334 0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
 133              		@ link register save eliminated.
 335:Generated_Source\PSoC5/AccelerometerTimer.c ****     return (AccelerometerTimer_STATUS);
 134              		.loc 1 335 0
 135 0000 014B     		ldr	r3, .L14
 136 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 137              		.loc 1 336 0
 138 0004 7047     		bx	lr
 139              	.L15:
 140 0006 00BF     		.align	2
 141              	.L14:
 142 0008 65650040 		.word	1073767781
 143              		.cfi_endproc
 144              	.LFE6:
 145              		.size	AccelerometerTimer_ReadStatusRegister, .-AccelerometerTimer_ReadStatusRegister
 146              		.section	.text.AccelerometerTimer_ReadControlRegister,"ax",%progbits
 147              		.align	2
 148              		.global	AccelerometerTimer_ReadControlRegister
 149              		.thumb
 150              		.thumb_func
 151              		.type	AccelerometerTimer_ReadControlRegister, %function
 152              	AccelerometerTimer_ReadControlRegister:
 153              	.LFB7:
 337:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 338:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 339:Generated_Source\PSoC5/AccelerometerTimer.c **** #if (!AccelerometerTimer_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 341:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 342:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_ReadControlRegister
 344:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 345:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 346:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 347:Generated_Source\PSoC5/AccelerometerTimer.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 349:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 350:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 351:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 352:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 353:Generated_Source\PSoC5/AccelerometerTimer.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 355:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/AccelerometerTimer.c **** uint8 AccelerometerTimer_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/AccelerometerTimer.c **** {
 154              		.loc 1 357 0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 10


 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
 358:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if (!AccelerometerTimer_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/AccelerometerTimer.c ****         return ((uint8)AccelerometerTimer_CONTROL);
 159              		.loc 1 359 0
 160 0000 014B     		ldr	r3, .L17
 161 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 360:Generated_Source\PSoC5/AccelerometerTimer.c ****     #else
 361:Generated_Source\PSoC5/AccelerometerTimer.c ****         return (0);
 362:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif /* (!AccelerometerTimer_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 162              		.loc 1 363 0
 163 0004 7047     		bx	lr
 164              	.L18:
 165 0006 00BF     		.align	2
 166              	.L17:
 167 0008 75650040 		.word	1073767797
 168              		.cfi_endproc
 169              	.LFE7:
 170              		.size	AccelerometerTimer_ReadControlRegister, .-AccelerometerTimer_ReadControlRegister
 171              		.section	.text.AccelerometerTimer_WriteControlRegister,"ax",%progbits
 172              		.align	2
 173              		.global	AccelerometerTimer_WriteControlRegister
 174              		.thumb
 175              		.thumb_func
 176              		.type	AccelerometerTimer_WriteControlRegister, %function
 177              	AccelerometerTimer_WriteControlRegister:
 178              	.LFB8:
 364:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 365:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 366:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_WriteControlRegister
 368:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 369:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 370:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 371:Generated_Source\PSoC5/AccelerometerTimer.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 373:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 374:Generated_Source\PSoC5/AccelerometerTimer.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 376:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 377:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 378:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/AccelerometerTimer.c **** void AccelerometerTimer_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/AccelerometerTimer.c **** {
 179              		.loc 1 380 0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183              		@ link register save eliminated.
 184              	.LVL1:
 381:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if (!AccelerometerTimer_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_CONTROL = control;
 185              		.loc 1 382 0
 186 0000 014B     		ldr	r3, .L20
 187 0002 1870     		strb	r0, [r3]
 188 0004 7047     		bx	lr
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 11


 189              	.L21:
 190 0006 00BF     		.align	2
 191              	.L20:
 192 0008 75650040 		.word	1073767797
 193              		.cfi_endproc
 194              	.LFE8:
 195              		.size	AccelerometerTimer_WriteControlRegister, .-AccelerometerTimer_WriteControlRegister
 196              		.section	.text.AccelerometerTimer_ReadPeriod,"ax",%progbits
 197              		.align	2
 198              		.global	AccelerometerTimer_ReadPeriod
 199              		.thumb
 200              		.thumb_func
 201              		.type	AccelerometerTimer_ReadPeriod, %function
 202              	AccelerometerTimer_ReadPeriod:
 203              	.LFB9:
 383:Generated_Source\PSoC5/AccelerometerTimer.c ****     #else
 384:Generated_Source\PSoC5/AccelerometerTimer.c ****         control = 0u;
 385:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif /* (!AccelerometerTimer_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 387:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 388:Generated_Source\PSoC5/AccelerometerTimer.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 390:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 391:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_ReadPeriod
 393:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 394:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 395:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 396:Generated_Source\PSoC5/AccelerometerTimer.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 398:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 399:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 400:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 401:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 402:Generated_Source\PSoC5/AccelerometerTimer.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 404:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/AccelerometerTimer.c **** uint32 AccelerometerTimer_ReadPeriod(void) 
 406:Generated_Source\PSoC5/AccelerometerTimer.c **** {
 204              		.loc 1 406 0
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 0
 207              		@ frame_needed = 0, uses_anonymous_args = 0
 208              		@ link register save eliminated.
 407:Generated_Source\PSoC5/AccelerometerTimer.c ****    #if(AccelerometerTimer_UsingFixedFunction)
 408:Generated_Source\PSoC5/AccelerometerTimer.c ****        return ((uint32)CY_GET_REG16(AccelerometerTimer_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/AccelerometerTimer.c ****    #else
 410:Generated_Source\PSoC5/AccelerometerTimer.c ****        return (CY_GET_REG24(AccelerometerTimer_PERIOD_LSB_PTR));
 209              		.loc 1 410 0
 210 0000 024B     		ldr	r3, .L23
 211 0002 1868     		ldr	r0, [r3]
 411:Generated_Source\PSoC5/AccelerometerTimer.c ****    #endif /* (AccelerometerTimer_UsingFixedFunction) */
 412:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 212              		.loc 1 412 0
 213 0004 20F07F40 		bic	r0, r0, #-16777216
 214 0008 7047     		bx	lr
 215              	.L24:
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 12


 216 000a 00BF     		.align	2
 217              	.L23:
 218 000c 24650040 		.word	1073767716
 219              		.cfi_endproc
 220              	.LFE9:
 221              		.size	AccelerometerTimer_ReadPeriod, .-AccelerometerTimer_ReadPeriod
 222              		.section	.text.AccelerometerTimer_WritePeriod,"ax",%progbits
 223              		.align	2
 224              		.global	AccelerometerTimer_WritePeriod
 225              		.thumb
 226              		.thumb_func
 227              		.type	AccelerometerTimer_WritePeriod, %function
 228              	AccelerometerTimer_WritePeriod:
 229              	.LFB10:
 413:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 414:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 415:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_WritePeriod
 417:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 418:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 419:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 420:Generated_Source\PSoC5/AccelerometerTimer.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/AccelerometerTimer.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 423:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 424:Generated_Source\PSoC5/AccelerometerTimer.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/AccelerometerTimer.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 427:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 428:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 429:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 430:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/AccelerometerTimer.c **** void AccelerometerTimer_WritePeriod(uint32 period) 
 432:Generated_Source\PSoC5/AccelerometerTimer.c **** {
 230              		.loc 1 432 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234              	.LVL2:
 235 0000 08B5     		push	{r3, lr}
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 3, -8
 238              		.cfi_offset 14, -4
 433:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if(AccelerometerTimer_UsingFixedFunction)
 434:Generated_Source\PSoC5/AccelerometerTimer.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/AccelerometerTimer.c ****         CY_SET_REG16(AccelerometerTimer_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC5/AccelerometerTimer.c ****     #else
 437:Generated_Source\PSoC5/AccelerometerTimer.c ****         CY_SET_REG24(AccelerometerTimer_PERIOD_LSB_PTR, period);
 239              		.loc 1 437 0
 240 0002 0146     		mov	r1, r0
 241 0004 0148     		ldr	r0, .L27
 242              	.LVL3:
 243 0006 FFF7FEFF 		bl	CySetReg24
 244              	.LVL4:
 245 000a 08BD     		pop	{r3, pc}
 246              	.L28:
 247              		.align	2
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 13


 248              	.L27:
 249 000c 24650040 		.word	1073767716
 250              		.cfi_endproc
 251              	.LFE10:
 252              		.size	AccelerometerTimer_WritePeriod, .-AccelerometerTimer_WritePeriod
 253              		.section	.text.AccelerometerTimer_ReadCapture,"ax",%progbits
 254              		.align	2
 255              		.global	AccelerometerTimer_ReadCapture
 256              		.thumb
 257              		.thumb_func
 258              		.type	AccelerometerTimer_ReadCapture, %function
 259              	AccelerometerTimer_ReadCapture:
 260              	.LFB11:
 438:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 440:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 441:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 442:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_ReadCapture
 444:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 445:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 446:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 447:Generated_Source\PSoC5/AccelerometerTimer.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 449:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 450:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 451:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 452:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 453:Generated_Source\PSoC5/AccelerometerTimer.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 455:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/AccelerometerTimer.c **** uint32 AccelerometerTimer_ReadCapture(void) 
 457:Generated_Source\PSoC5/AccelerometerTimer.c **** {
 261              		.loc 1 457 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 0, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 458:Generated_Source\PSoC5/AccelerometerTimer.c ****    #if(AccelerometerTimer_UsingFixedFunction)
 459:Generated_Source\PSoC5/AccelerometerTimer.c ****        return ((uint32)CY_GET_REG16(AccelerometerTimer_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC5/AccelerometerTimer.c ****    #else
 461:Generated_Source\PSoC5/AccelerometerTimer.c ****        return (CY_GET_REG24(AccelerometerTimer_CAPTURE_LSB_PTR));
 266              		.loc 1 461 0
 267 0000 024B     		ldr	r3, .L30
 268 0002 1868     		ldr	r0, [r3]
 462:Generated_Source\PSoC5/AccelerometerTimer.c ****    #endif /* (AccelerometerTimer_UsingFixedFunction) */
 463:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 269              		.loc 1 463 0
 270 0004 20F07F40 		bic	r0, r0, #-16777216
 271 0008 7047     		bx	lr
 272              	.L31:
 273 000a 00BF     		.align	2
 274              	.L30:
 275 000c 44650040 		.word	1073767748
 276              		.cfi_endproc
 277              	.LFE11:
 278              		.size	AccelerometerTimer_ReadCapture, .-AccelerometerTimer_ReadCapture
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 14


 279              		.section	.text.AccelerometerTimer_WriteCounter,"ax",%progbits
 280              		.align	2
 281              		.global	AccelerometerTimer_WriteCounter
 282              		.thumb
 283              		.thumb_func
 284              		.type	AccelerometerTimer_WriteCounter, %function
 285              	AccelerometerTimer_WriteCounter:
 286              	.LFB12:
 464:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 465:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 466:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_WriteCounter
 468:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 469:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 470:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 471:Generated_Source\PSoC5/AccelerometerTimer.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 473:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 474:Generated_Source\PSoC5/AccelerometerTimer.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 476:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 477:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 478:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 479:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/AccelerometerTimer.c **** void AccelerometerTimer_WriteCounter(uint32 counter) 
 481:Generated_Source\PSoC5/AccelerometerTimer.c **** {
 287              		.loc 1 481 0
 288              		.cfi_startproc
 289              		@ args = 0, pretend = 0, frame = 0
 290              		@ frame_needed = 0, uses_anonymous_args = 0
 291              	.LVL5:
 292 0000 08B5     		push	{r3, lr}
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 3, -8
 295              		.cfi_offset 14, -4
 482:Generated_Source\PSoC5/AccelerometerTimer.c ****    #if(AccelerometerTimer_UsingFixedFunction)
 483:Generated_Source\PSoC5/AccelerometerTimer.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/AccelerometerTimer.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/AccelerometerTimer.c ****          */
 486:Generated_Source\PSoC5/AccelerometerTimer.c ****         CY_SET_REG16(AccelerometerTimer_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/AccelerometerTimer.c ****         
 488:Generated_Source\PSoC5/AccelerometerTimer.c ****     #else
 489:Generated_Source\PSoC5/AccelerometerTimer.c ****         CY_SET_REG24(AccelerometerTimer_COUNTER_LSB_PTR, counter);
 296              		.loc 1 489 0
 297 0002 0146     		mov	r1, r0
 298 0004 0148     		ldr	r0, .L34
 299              	.LVL6:
 300 0006 FFF7FEFF 		bl	CySetReg24
 301              	.LVL7:
 302 000a 08BD     		pop	{r3, pc}
 303              	.L35:
 304              		.align	2
 305              	.L34:
 306 000c 04650040 		.word	1073767684
 307              		.cfi_endproc
 308              	.LFE12:
 309              		.size	AccelerometerTimer_WriteCounter, .-AccelerometerTimer_WriteCounter
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 15


 310              		.section	.text.AccelerometerTimer_ReadCounter,"ax",%progbits
 311              		.align	2
 312              		.global	AccelerometerTimer_ReadCounter
 313              		.thumb
 314              		.thumb_func
 315              		.type	AccelerometerTimer_ReadCounter, %function
 316              	AccelerometerTimer_ReadCounter:
 317              	.LFB13:
 490:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 492:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 493:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 494:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_ReadCounter
 496:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 497:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 498:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 499:Generated_Source\PSoC5/AccelerometerTimer.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 501:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 502:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 503:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 504:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 505:Generated_Source\PSoC5/AccelerometerTimer.c **** *  Present compare value.
 506:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 507:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/AccelerometerTimer.c **** uint32 AccelerometerTimer_ReadCounter(void) 
 509:Generated_Source\PSoC5/AccelerometerTimer.c **** {
 318              		.loc 1 509 0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 0
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322              		@ link register save eliminated.
 510:Generated_Source\PSoC5/AccelerometerTimer.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/AccelerometerTimer.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/AccelerometerTimer.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if(AccelerometerTimer_UsingFixedFunction)
 514:Generated_Source\PSoC5/AccelerometerTimer.c ****         (void)CY_GET_REG16(AccelerometerTimer_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/AccelerometerTimer.c ****     #else
 516:Generated_Source\PSoC5/AccelerometerTimer.c ****         (void)CY_GET_REG8(AccelerometerTimer_COUNTER_LSB_PTR_8BIT);
 323              		.loc 1 516 0
 324 0000 034B     		ldr	r3, .L37
 325 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif/* (AccelerometerTimer_UsingFixedFunction) */
 518:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 519:Generated_Source\PSoC5/AccelerometerTimer.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if(AccelerometerTimer_UsingFixedFunction)
 521:Generated_Source\PSoC5/AccelerometerTimer.c ****         return ((uint32)CY_GET_REG16(AccelerometerTimer_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/AccelerometerTimer.c ****     #else
 523:Generated_Source\PSoC5/AccelerometerTimer.c ****         return (CY_GET_REG24(AccelerometerTimer_CAPTURE_LSB_PTR));
 326              		.loc 1 523 0
 327 0004 034B     		ldr	r3, .L37+4
 328 0006 1868     		ldr	r0, [r3]
 524:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif /* (AccelerometerTimer_UsingFixedFunction) */
 525:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 329              		.loc 1 525 0
 330 0008 20F07F40 		bic	r0, r0, #-16777216
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 16


 331 000c 7047     		bx	lr
 332              	.L38:
 333 000e 00BF     		.align	2
 334              	.L37:
 335 0010 04650040 		.word	1073767684
 336 0014 44650040 		.word	1073767748
 337              		.cfi_endproc
 338              	.LFE13:
 339              		.size	AccelerometerTimer_ReadCounter, .-AccelerometerTimer_ReadCounter
 340              		.section	.text.AccelerometerTimer_ClearFIFO,"ax",%progbits
 341              		.align	2
 342              		.global	AccelerometerTimer_ClearFIFO
 343              		.thumb
 344              		.thumb_func
 345              		.type	AccelerometerTimer_ClearFIFO, %function
 346              	AccelerometerTimer_ClearFIFO:
 347              	.LFB14:
 526:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 527:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 528:Generated_Source\PSoC5/AccelerometerTimer.c **** #if(!AccelerometerTimer_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 530:Generated_Source\PSoC5/AccelerometerTimer.c ****     
 531:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 532:Generated_Source\PSoC5/AccelerometerTimer.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/AccelerometerTimer.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/AccelerometerTimer.c ****  ******************************************************************************/
 535:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 536:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 537:Generated_Source\PSoC5/AccelerometerTimer.c **** #if (AccelerometerTimer_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 539:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 540:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_SetCaptureMode
 542:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 543:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 544:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 545:Generated_Source\PSoC5/AccelerometerTimer.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 547:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 548:Generated_Source\PSoC5/AccelerometerTimer.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/AccelerometerTimer.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/AccelerometerTimer.c **** *  #define AccelerometerTimer__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/AccelerometerTimer.c **** #define AccelerometerTimer__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/AccelerometerTimer.c **** #define AccelerometerTimer__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/AccelerometerTimer.c **** #define AccelerometerTimer__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/AccelerometerTimer.c **** #define AccelerometerTimer__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/AccelerometerTimer.c ****  identifiers
 556:Generated_Source\PSoC5/AccelerometerTimer.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/AccelerometerTimer.c **** *  AccelerometerTimer__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/AccelerometerTimer.c **** *  AccelerometerTimer__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/AccelerometerTimer.c **** *  AccelerometerTimer__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/AccelerometerTimer.c **** *  AccelerometerTimer__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 562:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 563:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 564:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 565:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 17


 566:Generated_Source\PSoC5/AccelerometerTimer.c **** void AccelerometerTimer_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC5/AccelerometerTimer.c **** {
 568:Generated_Source\PSoC5/AccelerometerTimer.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/AccelerometerTimer.c ****     captureMode = ((uint8)((uint8)captureMode << AccelerometerTimer_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC5/AccelerometerTimer.c ****     captureMode &= (AccelerometerTimer_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 572:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if (!AccelerometerTimer_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/AccelerometerTimer.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_CONTROL &= ((uint8)(~AccelerometerTimer_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 576:Generated_Source\PSoC5/AccelerometerTimer.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_CONTROL |= captureMode;
 578:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif /* (!AccelerometerTimer_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 580:Generated_Source\PSoC5/AccelerometerTimer.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 582:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 583:Generated_Source\PSoC5/AccelerometerTimer.c **** #if (AccelerometerTimer_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 585:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 586:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_SetTriggerMode
 588:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 589:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 590:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 591:Generated_Source\PSoC5/AccelerometerTimer.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 593:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 594:Generated_Source\PSoC5/AccelerometerTimer.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/AccelerometerTimer.c ****     #define AccelerometerTimer__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/AccelerometerTimer.c ****     #define AccelerometerTimer__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/AccelerometerTimer.c ****     #define AccelerometerTimer__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/AccelerometerTimer.c ****     #define AccelerometerTimer__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/AccelerometerTimer.c ****     #define AccelerometerTimer__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 601:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 602:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 603:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 604:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/AccelerometerTimer.c **** void AccelerometerTimer_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/AccelerometerTimer.c **** {
 607:Generated_Source\PSoC5/AccelerometerTimer.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/AccelerometerTimer.c ****     triggerMode &= AccelerometerTimer_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 610:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if (!AccelerometerTimer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is
 611:Generated_Source\PSoC5/AccelerometerTimer.c ****     
 612:Generated_Source\PSoC5/AccelerometerTimer.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_CONTROL &= ((uint8)(~AccelerometerTimer_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 615:Generated_Source\PSoC5/AccelerometerTimer.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_CONTROL |= (triggerMode | AccelerometerTimer__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 619:Generated_Source\PSoC5/AccelerometerTimer.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 621:Generated_Source\PSoC5/AccelerometerTimer.c **** #if (AccelerometerTimer_EnableTriggerMode)
 622:Generated_Source\PSoC5/AccelerometerTimer.c **** 
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 18


 623:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 624:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_EnableTrigger
 626:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 627:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 628:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 629:Generated_Source\PSoC5/AccelerometerTimer.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 631:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 632:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 633:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 634:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 635:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 636:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 637:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 638:Generated_Source\PSoC5/AccelerometerTimer.c **** void AccelerometerTimer_EnableTrigger(void) 
 639:Generated_Source\PSoC5/AccelerometerTimer.c **** {
 640:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if (!AccelerometerTimer_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is
 641:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_CONTROL |= AccelerometerTimer_CTRL_TRIG_EN;
 642:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 644:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 645:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 646:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_DisableTrigger
 648:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 649:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 650:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 651:Generated_Source\PSoC5/AccelerometerTimer.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 653:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 654:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 655:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 656:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 657:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 658:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 659:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/AccelerometerTimer.c **** void AccelerometerTimer_DisableTrigger(void) 
 661:Generated_Source\PSoC5/AccelerometerTimer.c **** {
 662:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if (!AccelerometerTimer_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register i
 663:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_CONTROL &= ((uint8)(~AccelerometerTimer_CTRL_TRIG_EN));
 664:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 666:Generated_Source\PSoC5/AccelerometerTimer.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 668:Generated_Source\PSoC5/AccelerometerTimer.c **** #if(AccelerometerTimer_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 670:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 671:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_SetInterruptCount
 673:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 674:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 675:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 676:Generated_Source\PSoC5/AccelerometerTimer.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 678:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 679:Generated_Source\PSoC5/AccelerometerTimer.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 19


 680:Generated_Source\PSoC5/AccelerometerTimer.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC5/AccelerometerTimer.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/AccelerometerTimer.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 684:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 685:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 686:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 687:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 688:Generated_Source\PSoC5/AccelerometerTimer.c **** void AccelerometerTimer_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC5/AccelerometerTimer.c **** {
 690:Generated_Source\PSoC5/AccelerometerTimer.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC5/AccelerometerTimer.c ****     interruptCount &= AccelerometerTimer_CTRL_INTCNT_MASK;
 692:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 693:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if (!AccelerometerTimer_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/AccelerometerTimer.c ****         /* Clear the Current Setting */
 695:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_CONTROL &= ((uint8)(~AccelerometerTimer_CTRL_INTCNT_MASK));
 696:Generated_Source\PSoC5/AccelerometerTimer.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC5/AccelerometerTimer.c ****         AccelerometerTimer_CONTROL |= interruptCount;
 698:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif /* (!AccelerometerTimer_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 700:Generated_Source\PSoC5/AccelerometerTimer.c **** #endif /* AccelerometerTimer_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 702:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 703:Generated_Source\PSoC5/AccelerometerTimer.c **** #if (AccelerometerTimer_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 705:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 706:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_SetCaptureCount
 708:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 709:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 710:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 711:Generated_Source\PSoC5/AccelerometerTimer.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 713:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 714:Generated_Source\PSoC5/AccelerometerTimer.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC5/AccelerometerTimer.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/AccelerometerTimer.c **** *                captures.
 717:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 718:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 719:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 720:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 721:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/AccelerometerTimer.c **** void AccelerometerTimer_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/AccelerometerTimer.c **** {
 724:Generated_Source\PSoC5/AccelerometerTimer.c ****     AccelerometerTimer_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 726:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 727:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 728:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_ReadCaptureCount
 730:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 731:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 732:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 733:Generated_Source\PSoC5/AccelerometerTimer.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 735:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 736:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 20


 737:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 738:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 739:Generated_Source\PSoC5/AccelerometerTimer.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 741:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 742:Generated_Source\PSoC5/AccelerometerTimer.c **** uint8 AccelerometerTimer_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/AccelerometerTimer.c **** {
 744:Generated_Source\PSoC5/AccelerometerTimer.c ****     return ((uint8)AccelerometerTimer_CAP_COUNT);
 745:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 746:Generated_Source\PSoC5/AccelerometerTimer.c **** #endif /* AccelerometerTimer_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 748:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 749:Generated_Source\PSoC5/AccelerometerTimer.c **** /*******************************************************************************
 750:Generated_Source\PSoC5/AccelerometerTimer.c **** * Function Name: AccelerometerTimer_ClearFIFO
 751:Generated_Source\PSoC5/AccelerometerTimer.c **** ********************************************************************************
 752:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 753:Generated_Source\PSoC5/AccelerometerTimer.c **** * Summary:
 754:Generated_Source\PSoC5/AccelerometerTimer.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 756:Generated_Source\PSoC5/AccelerometerTimer.c **** * Parameters:
 757:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 758:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 759:Generated_Source\PSoC5/AccelerometerTimer.c **** * Return:
 760:Generated_Source\PSoC5/AccelerometerTimer.c **** *  void
 761:Generated_Source\PSoC5/AccelerometerTimer.c **** *
 762:Generated_Source\PSoC5/AccelerometerTimer.c **** *******************************************************************************/
 763:Generated_Source\PSoC5/AccelerometerTimer.c **** void AccelerometerTimer_ClearFIFO(void) 
 764:Generated_Source\PSoC5/AccelerometerTimer.c **** {
 348              		.loc 1 764 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352 0000 08B5     		push	{r3, lr}
 353              		.cfi_def_cfa_offset 8
 354              		.cfi_offset 3, -8
 355              		.cfi_offset 14, -4
 765:Generated_Source\PSoC5/AccelerometerTimer.c ****     while(0u != (AccelerometerTimer_ReadStatusRegister() & AccelerometerTimer_STATUS_FIFONEMP))
 356              		.loc 1 765 0
 357 0002 01E0     		b	.L40
 358              	.L41:
 766:Generated_Source\PSoC5/AccelerometerTimer.c ****     {
 767:Generated_Source\PSoC5/AccelerometerTimer.c ****         (void)AccelerometerTimer_ReadCapture();
 359              		.loc 1 767 0
 360 0004 FFF7FEFF 		bl	AccelerometerTimer_ReadCapture
 361              	.LVL8:
 362              	.L40:
 765:Generated_Source\PSoC5/AccelerometerTimer.c ****     while(0u != (AccelerometerTimer_ReadStatusRegister() & AccelerometerTimer_STATUS_FIFONEMP))
 363              		.loc 1 765 0
 364 0008 FFF7FEFF 		bl	AccelerometerTimer_ReadStatusRegister
 365              	.LVL9:
 366 000c 10F0080F 		tst	r0, #8
 367 0010 F8D1     		bne	.L41
 768:Generated_Source\PSoC5/AccelerometerTimer.c ****     }
 769:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 368              		.loc 1 769 0
 369 0012 08BD     		pop	{r3, pc}
 370              		.cfi_endproc
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 21


 371              	.LFE14:
 372              		.size	AccelerometerTimer_ClearFIFO, .-AccelerometerTimer_ClearFIFO
 373              		.section	.text.AccelerometerTimer_Init,"ax",%progbits
 374              		.align	2
 375              		.global	AccelerometerTimer_Init
 376              		.thumb
 377              		.thumb_func
 378              		.type	AccelerometerTimer_Init, %function
 379              	AccelerometerTimer_Init:
 380              	.LFB0:
  44:Generated_Source\PSoC5/AccelerometerTimer.c ****     #if(!AccelerometerTimer_UsingFixedFunction)
 381              		.loc 1 44 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 0
 384              		@ frame_needed = 0, uses_anonymous_args = 0
 385 0000 10B5     		push	{r4, lr}
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 4, -8
 388              		.cfi_offset 14, -4
 118:Generated_Source\PSoC5/AccelerometerTimer.c ****     AccelerometerTimer_WriteCounter(AccelerometerTimer_INIT_PERIOD);
 389              		.loc 1 118 0
 390 0002 0B4C     		ldr	r4, .L45
 391 0004 2046     		mov	r0, r4
 392 0006 FFF7FEFF 		bl	AccelerometerTimer_WritePeriod
 393              	.LVL10:
 119:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 394              		.loc 1 119 0
 395 000a 2046     		mov	r0, r4
 396 000c FFF7FEFF 		bl	AccelerometerTimer_WriteCounter
 397              	.LVL11:
 142:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 398              		.loc 1 142 0
 399 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 400              	.LVL12:
 145:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 401              		.loc 1 145 0
 402 0014 074A     		ldr	r2, .L45+4
 403 0016 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 404 0018 43F01003 		orr	r3, r3, #16
 405 001c 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 406              		.loc 1 148 0
 407 001e FFF7FEFF 		bl	CyExitCriticalSection
 408              	.LVL13:
 159:Generated_Source\PSoC5/AccelerometerTimer.c ****     #endif /* Configure additional features of UDB implementation */
 409              		.loc 1 159 0
 410 0022 FFF7FEFF 		bl	AccelerometerTimer_ClearFIFO
 411              	.LVL14:
 162:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 412              		.loc 1 162 0
 413 0026 0120     		movs	r0, #1
 414 0028 FFF7FEFF 		bl	AccelerometerTimer_SetInterruptMode
 415              	.LVL15:
 416 002c 10BD     		pop	{r4, pc}
 417              	.L46:
 418 002e 00BF     		.align	2
 419              	.L45:
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 22


 420 0030 DF930400 		.word	299999
 421 0034 95650040 		.word	1073767829
 422              		.cfi_endproc
 423              	.LFE0:
 424              		.size	AccelerometerTimer_Init, .-AccelerometerTimer_Init
 425              		.section	.text.AccelerometerTimer_Start,"ax",%progbits
 426              		.align	2
 427              		.global	AccelerometerTimer_Start
 428              		.thumb
 429              		.thumb_func
 430              		.type	AccelerometerTimer_Start, %function
 431              	AccelerometerTimer_Start:
 432              	.LFB2:
 216:Generated_Source\PSoC5/AccelerometerTimer.c ****     if(AccelerometerTimer_initVar == 0u)
 433              		.loc 1 216 0
 434              		.cfi_startproc
 435              		@ args = 0, pretend = 0, frame = 0
 436              		@ frame_needed = 0, uses_anonymous_args = 0
 437 0000 08B5     		push	{r3, lr}
 438              		.cfi_def_cfa_offset 8
 439              		.cfi_offset 3, -8
 440              		.cfi_offset 14, -4
 217:Generated_Source\PSoC5/AccelerometerTimer.c ****     {
 441              		.loc 1 217 0
 442 0002 054B     		ldr	r3, .L50
 443 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 444 0006 23B9     		cbnz	r3, .L48
 219:Generated_Source\PSoC5/AccelerometerTimer.c **** 
 445              		.loc 1 219 0
 446 0008 FFF7FEFF 		bl	AccelerometerTimer_Init
 447              	.LVL16:
 221:Generated_Source\PSoC5/AccelerometerTimer.c ****     }
 448              		.loc 1 221 0
 449 000c 0122     		movs	r2, #1
 450 000e 024B     		ldr	r3, .L50
 451 0010 1A70     		strb	r2, [r3]
 452              	.L48:
 225:Generated_Source\PSoC5/AccelerometerTimer.c **** }
 453              		.loc 1 225 0
 454 0012 FFF7FEFF 		bl	AccelerometerTimer_Enable
 455              	.LVL17:
 456 0016 08BD     		pop	{r3, pc}
 457              	.L51:
 458              		.align	2
 459              	.L50:
 460 0018 00000000 		.word	.LANCHOR0
 461              		.cfi_endproc
 462              	.LFE2:
 463              		.size	AccelerometerTimer_Start, .-AccelerometerTimer_Start
 464              		.global	AccelerometerTimer_initVar
 465              		.bss
 466              		.set	.LANCHOR0,. + 0
 467              		.type	AccelerometerTimer_initVar, %object
 468              		.size	AccelerometerTimer_initVar, 1
 469              	AccelerometerTimer_initVar:
 470 0000 00       		.space	1
 471              		.text
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 23


 472              	.Letext0:
 473              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 474              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 475              		.section	.debug_info,"",%progbits
 476              	.Ldebug_info0:
 477 0000 2E030000 		.4byte	0x32e
 478 0004 0400     		.2byte	0x4
 479 0006 00000000 		.4byte	.Ldebug_abbrev0
 480 000a 04       		.byte	0x4
 481 000b 01       		.uleb128 0x1
 482 000c BF020000 		.4byte	.LASF40
 483 0010 0C       		.byte	0xc
 484 0011 93020000 		.4byte	.LASF41
 485 0015 9B000000 		.4byte	.LASF42
 486 0019 00000000 		.4byte	.Ldebug_ranges0+0
 487 001d 00000000 		.4byte	0
 488 0021 00000000 		.4byte	.Ldebug_line0
 489 0025 02       		.uleb128 0x2
 490 0026 01       		.byte	0x1
 491 0027 06       		.byte	0x6
 492 0028 F2030000 		.4byte	.LASF0
 493 002c 02       		.uleb128 0x2
 494 002d 01       		.byte	0x1
 495 002e 08       		.byte	0x8
 496 002f 09010000 		.4byte	.LASF1
 497 0033 02       		.uleb128 0x2
 498 0034 02       		.byte	0x2
 499 0035 05       		.byte	0x5
 500 0036 CD030000 		.4byte	.LASF2
 501 003a 02       		.uleb128 0x2
 502 003b 02       		.byte	0x2
 503 003c 07       		.byte	0x7
 504 003d 83000000 		.4byte	.LASF3
 505 0041 02       		.uleb128 0x2
 506 0042 04       		.byte	0x4
 507 0043 05       		.byte	0x5
 508 0044 D7030000 		.4byte	.LASF4
 509 0048 02       		.uleb128 0x2
 510 0049 04       		.byte	0x4
 511 004a 07       		.byte	0x7
 512 004b 7F010000 		.4byte	.LASF5
 513 004f 02       		.uleb128 0x2
 514 0050 08       		.byte	0x8
 515 0051 05       		.byte	0x5
 516 0052 89030000 		.4byte	.LASF6
 517 0056 02       		.uleb128 0x2
 518 0057 08       		.byte	0x8
 519 0058 07       		.byte	0x7
 520 0059 F2000000 		.4byte	.LASF7
 521 005d 03       		.uleb128 0x3
 522 005e 04       		.byte	0x4
 523 005f 05       		.byte	0x5
 524 0060 696E7400 		.ascii	"int\000"
 525 0064 02       		.uleb128 0x2
 526 0065 04       		.byte	0x4
 527 0066 07       		.byte	0x7
 528 0067 21020000 		.4byte	.LASF8
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 24


 529 006b 04       		.uleb128 0x4
 530 006c A9010000 		.4byte	.LASF9
 531 0070 02       		.byte	0x2
 532 0071 E401     		.2byte	0x1e4
 533 0073 2C000000 		.4byte	0x2c
 534 0077 04       		.uleb128 0x4
 535 0078 03020000 		.4byte	.LASF10
 536 007c 02       		.byte	0x2
 537 007d E601     		.2byte	0x1e6
 538 007f 48000000 		.4byte	0x48
 539 0083 02       		.uleb128 0x2
 540 0084 04       		.byte	0x4
 541 0085 04       		.byte	0x4
 542 0086 E4000000 		.4byte	.LASF11
 543 008a 02       		.uleb128 0x2
 544 008b 08       		.byte	0x8
 545 008c 04       		.byte	0x4
 546 008d DD010000 		.4byte	.LASF12
 547 0091 02       		.uleb128 0x2
 548 0092 01       		.byte	0x1
 549 0093 08       		.byte	0x8
 550 0094 96000000 		.4byte	.LASF13
 551 0098 04       		.uleb128 0x4
 552 0099 57010000 		.4byte	.LASF14
 553 009d 02       		.byte	0x2
 554 009e 8E02     		.2byte	0x28e
 555 00a0 A4000000 		.4byte	0xa4
 556 00a4 05       		.uleb128 0x5
 557 00a5 6B000000 		.4byte	0x6b
 558 00a9 04       		.uleb128 0x4
 559 00aa E0030000 		.4byte	.LASF15
 560 00ae 02       		.byte	0x2
 561 00af 9002     		.2byte	0x290
 562 00b1 B5000000 		.4byte	0xb5
 563 00b5 05       		.uleb128 0x5
 564 00b6 77000000 		.4byte	0x77
 565 00ba 02       		.uleb128 0x2
 566 00bb 08       		.byte	0x8
 567 00bc 04       		.byte	0x4
 568 00bd E6030000 		.4byte	.LASF16
 569 00c1 02       		.uleb128 0x2
 570 00c2 04       		.byte	0x4
 571 00c3 07       		.byte	0x7
 572 00c4 4D030000 		.4byte	.LASF17
 573 00c8 06       		.uleb128 0x6
 574 00c9 FE030000 		.4byte	.LASF18
 575 00cd 01       		.byte	0x1
 576 00ce B4       		.byte	0xb4
 577 00cf 00000000 		.4byte	.LFB1
 578 00d3 10000000 		.4byte	.LFE1-.LFB1
 579 00d7 01       		.uleb128 0x1
 580 00d8 9C       		.byte	0x9c
 581 00d9 06       		.uleb128 0x6
 582 00da 56030000 		.4byte	.LASF19
 583 00de 01       		.byte	0x1
 584 00df F7       		.byte	0xf7
 585 00e0 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 25


 586 00e4 10000000 		.4byte	.LFE3-.LFB3
 587 00e8 01       		.uleb128 0x1
 588 00e9 9C       		.byte	0x9c
 589 00ea 07       		.uleb128 0x7
 590 00eb 38000000 		.4byte	.LASF23
 591 00ef 01       		.byte	0x1
 592 00f0 1701     		.2byte	0x117
 593 00f2 00000000 		.4byte	.LFB4
 594 00f6 0C000000 		.4byte	.LFE4-.LFB4
 595 00fa 01       		.uleb128 0x1
 596 00fb 9C       		.byte	0x9c
 597 00fc 0F010000 		.4byte	0x10f
 598 0100 08       		.uleb128 0x8
 599 0101 97030000 		.4byte	.LASF25
 600 0105 01       		.byte	0x1
 601 0106 1701     		.2byte	0x117
 602 0108 6B000000 		.4byte	0x6b
 603 010c 01       		.uleb128 0x1
 604 010d 50       		.byte	0x50
 605 010e 00       		.byte	0
 606 010f 09       		.uleb128 0x9
 607 0110 5C010000 		.4byte	.LASF20
 608 0114 01       		.byte	0x1
 609 0115 2E01     		.2byte	0x12e
 610 0117 00000000 		.4byte	.LFB5
 611 011b 0C000000 		.4byte	.LFE5-.LFB5
 612 011f 01       		.uleb128 0x1
 613 0120 9C       		.byte	0x9c
 614 0121 0A       		.uleb128 0xa
 615 0122 B7010000 		.4byte	.LASF21
 616 0126 01       		.byte	0x1
 617 0127 4D01     		.2byte	0x14d
 618 0129 6B000000 		.4byte	0x6b
 619 012d 00000000 		.4byte	.LFB6
 620 0131 0C000000 		.4byte	.LFE6-.LFB6
 621 0135 01       		.uleb128 0x1
 622 0136 9C       		.byte	0x9c
 623 0137 0A       		.uleb128 0xa
 624 0138 2E020000 		.4byte	.LASF22
 625 013c 01       		.byte	0x1
 626 013d 6401     		.2byte	0x164
 627 013f 6B000000 		.4byte	0x6b
 628 0143 00000000 		.4byte	.LFB7
 629 0147 0C000000 		.4byte	.LFE7-.LFB7
 630 014b 01       		.uleb128 0x1
 631 014c 9C       		.byte	0x9c
 632 014d 07       		.uleb128 0x7
 633 014e 6B020000 		.4byte	.LASF24
 634 0152 01       		.byte	0x1
 635 0153 7B01     		.2byte	0x17b
 636 0155 00000000 		.4byte	.LFB8
 637 0159 0C000000 		.4byte	.LFE8-.LFB8
 638 015d 01       		.uleb128 0x1
 639 015e 9C       		.byte	0x9c
 640 015f 72010000 		.4byte	0x172
 641 0163 08       		.uleb128 0x8
 642 0164 AF010000 		.4byte	.LASF26
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 26


 643 0168 01       		.byte	0x1
 644 0169 7B01     		.2byte	0x17b
 645 016b 6B000000 		.4byte	0x6b
 646 016f 01       		.uleb128 0x1
 647 0170 50       		.byte	0x50
 648 0171 00       		.byte	0
 649 0172 0A       		.uleb128 0xa
 650 0173 17010000 		.4byte	.LASF27
 651 0177 01       		.byte	0x1
 652 0178 9501     		.2byte	0x195
 653 017a 77000000 		.4byte	0x77
 654 017e 00000000 		.4byte	.LFB9
 655 0182 10000000 		.4byte	.LFE9-.LFB9
 656 0186 01       		.uleb128 0x1
 657 0187 9C       		.byte	0x9c
 658 0188 07       		.uleb128 0x7
 659 0189 E4010000 		.4byte	.LASF28
 660 018d 01       		.byte	0x1
 661 018e AF01     		.2byte	0x1af
 662 0190 00000000 		.4byte	.LFB10
 663 0194 10000000 		.4byte	.LFE10-.LFB10
 664 0198 01       		.uleb128 0x1
 665 0199 9C       		.byte	0x9c
 666 019a C9010000 		.4byte	0x1c9
 667 019e 0B       		.uleb128 0xb
 668 019f 5C000000 		.4byte	.LASF29
 669 01a3 01       		.byte	0x1
 670 01a4 AF01     		.2byte	0x1af
 671 01a6 77000000 		.4byte	0x77
 672 01aa 00000000 		.4byte	.LLST0
 673 01ae 0C       		.uleb128 0xc
 674 01af 0A000000 		.4byte	.LVL4
 675 01b3 0F030000 		.4byte	0x30f
 676 01b7 0D       		.uleb128 0xd
 677 01b8 01       		.uleb128 0x1
 678 01b9 50       		.byte	0x50
 679 01ba 05       		.uleb128 0x5
 680 01bb 0C       		.byte	0xc
 681 01bc 24650040 		.4byte	0x40006524
 682 01c0 0D       		.uleb128 0xd
 683 01c1 01       		.uleb128 0x1
 684 01c2 51       		.byte	0x51
 685 01c3 03       		.uleb128 0x3
 686 01c4 F3       		.byte	0xf3
 687 01c5 01       		.uleb128 0x1
 688 01c6 50       		.byte	0x50
 689 01c7 00       		.byte	0
 690 01c8 00       		.byte	0
 691 01c9 0A       		.uleb128 0xa
 692 01ca 19000000 		.4byte	.LASF30
 693 01ce 01       		.byte	0x1
 694 01cf C801     		.2byte	0x1c8
 695 01d1 77000000 		.4byte	0x77
 696 01d5 00000000 		.4byte	.LFB11
 697 01d9 10000000 		.4byte	.LFE11-.LFB11
 698 01dd 01       		.uleb128 0x1
 699 01de 9C       		.byte	0x9c
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 27


 700 01df 07       		.uleb128 0x7
 701 01e0 63000000 		.4byte	.LASF31
 702 01e4 01       		.byte	0x1
 703 01e5 E001     		.2byte	0x1e0
 704 01e7 00000000 		.4byte	.LFB12
 705 01eb 10000000 		.4byte	.LFE12-.LFB12
 706 01ef 01       		.uleb128 0x1
 707 01f0 9C       		.byte	0x9c
 708 01f1 20020000 		.4byte	0x220
 709 01f5 0B       		.uleb128 0xb
 710 01f6 EA000000 		.4byte	.LASF32
 711 01fa 01       		.byte	0x1
 712 01fb E001     		.2byte	0x1e0
 713 01fd 77000000 		.4byte	0x77
 714 0201 2C000000 		.4byte	.LLST1
 715 0205 0C       		.uleb128 0xc
 716 0206 0A000000 		.4byte	.LVL7
 717 020a 0F030000 		.4byte	0x30f
 718 020e 0D       		.uleb128 0xd
 719 020f 01       		.uleb128 0x1
 720 0210 50       		.byte	0x50
 721 0211 05       		.uleb128 0x5
 722 0212 0C       		.byte	0xc
 723 0213 04650040 		.4byte	0x40006504
 724 0217 0D       		.uleb128 0xd
 725 0218 01       		.uleb128 0x1
 726 0219 51       		.byte	0x51
 727 021a 03       		.uleb128 0x3
 728 021b F3       		.byte	0xf3
 729 021c 01       		.uleb128 0x1
 730 021d 50       		.byte	0x50
 731 021e 00       		.byte	0
 732 021f 00       		.byte	0
 733 0220 0A       		.uleb128 0xa
 734 0221 18040000 		.4byte	.LASF33
 735 0225 01       		.byte	0x1
 736 0226 FC01     		.2byte	0x1fc
 737 0228 77000000 		.4byte	0x77
 738 022c 00000000 		.4byte	.LFB13
 739 0230 18000000 		.4byte	.LFE13-.LFB13
 740 0234 01       		.uleb128 0x1
 741 0235 9C       		.byte	0x9c
 742 0236 07       		.uleb128 0x7
 743 0237 A5030000 		.4byte	.LASF34
 744 023b 01       		.byte	0x1
 745 023c FB02     		.2byte	0x2fb
 746 023e 00000000 		.4byte	.LFB14
 747 0242 14000000 		.4byte	.LFE14-.LFB14
 748 0246 01       		.uleb128 0x1
 749 0247 9C       		.byte	0x9c
 750 0248 5F020000 		.4byte	0x25f
 751 024c 0E       		.uleb128 0xe
 752 024d 08000000 		.4byte	.LVL8
 753 0251 C9010000 		.4byte	0x1c9
 754 0255 0E       		.uleb128 0xe
 755 0256 0C000000 		.4byte	.LVL9
 756 025a 21010000 		.4byte	0x121
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 28


 757 025e 00       		.byte	0
 758 025f 0F       		.uleb128 0xf
 759 0260 91010000 		.4byte	.LASF35
 760 0264 01       		.byte	0x1
 761 0265 2B       		.byte	0x2b
 762 0266 00000000 		.4byte	.LFB0
 763 026a 38000000 		.4byte	.LFE0-.LFB0
 764 026e 01       		.uleb128 0x1
 765 026f 9C       		.byte	0x9c
 766 0270 D6020000 		.4byte	0x2d6
 767 0274 10       		.uleb128 0x10
 768 0275 35010000 		.4byte	.LASF43
 769 0279 01       		.byte	0x1
 770 027a 2F       		.byte	0x2f
 771 027b 6B000000 		.4byte	0x6b
 772 027f 58000000 		.4byte	.LLST2
 773 0283 11       		.uleb128 0x11
 774 0284 0A000000 		.4byte	.LVL10
 775 0288 88010000 		.4byte	0x188
 776 028c 97020000 		.4byte	0x297
 777 0290 0D       		.uleb128 0xd
 778 0291 01       		.uleb128 0x1
 779 0292 50       		.byte	0x50
 780 0293 02       		.uleb128 0x2
 781 0294 74       		.byte	0x74
 782 0295 00       		.sleb128 0
 783 0296 00       		.byte	0
 784 0297 11       		.uleb128 0x11
 785 0298 10000000 		.4byte	.LVL11
 786 029c DF010000 		.4byte	0x1df
 787 02a0 AB020000 		.4byte	0x2ab
 788 02a4 0D       		.uleb128 0xd
 789 02a5 01       		.uleb128 0x1
 790 02a6 50       		.byte	0x50
 791 02a7 02       		.uleb128 0x2
 792 02a8 74       		.byte	0x74
 793 02a9 00       		.sleb128 0
 794 02aa 00       		.byte	0
 795 02ab 0E       		.uleb128 0xe
 796 02ac 14000000 		.4byte	.LVL12
 797 02b0 1B030000 		.4byte	0x31b
 798 02b4 0E       		.uleb128 0xe
 799 02b5 22000000 		.4byte	.LVL13
 800 02b9 26030000 		.4byte	0x326
 801 02bd 0E       		.uleb128 0xe
 802 02be 26000000 		.4byte	.LVL14
 803 02c2 36020000 		.4byte	0x236
 804 02c6 0C       		.uleb128 0xc
 805 02c7 2C000000 		.4byte	.LVL15
 806 02cb EA000000 		.4byte	0xea
 807 02cf 0D       		.uleb128 0xd
 808 02d0 01       		.uleb128 0x1
 809 02d1 50       		.byte	0x50
 810 02d2 01       		.uleb128 0x1
 811 02d3 31       		.byte	0x31
 812 02d4 00       		.byte	0
 813 02d5 00       		.byte	0
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 29


 814 02d6 0F       		.uleb128 0xf
 815 02d7 00000000 		.4byte	.LASF36
 816 02db 01       		.byte	0x1
 817 02dc D7       		.byte	0xd7
 818 02dd 00000000 		.4byte	.LFB2
 819 02e1 1C000000 		.4byte	.LFE2-.LFB2
 820 02e5 01       		.uleb128 0x1
 821 02e6 9C       		.byte	0x9c
 822 02e7 FE020000 		.4byte	0x2fe
 823 02eb 0E       		.uleb128 0xe
 824 02ec 0C000000 		.4byte	.LVL16
 825 02f0 5F020000 		.4byte	0x25f
 826 02f4 0E       		.uleb128 0xe
 827 02f5 16000000 		.4byte	.LVL17
 828 02f9 C8000000 		.4byte	0xc8
 829 02fd 00       		.byte	0
 830 02fe 12       		.uleb128 0x12
 831 02ff 6E030000 		.4byte	.LASF44
 832 0303 01       		.byte	0x1
 833 0304 1A       		.byte	0x1a
 834 0305 6B000000 		.4byte	0x6b
 835 0309 05       		.uleb128 0x5
 836 030a 03       		.byte	0x3
 837 030b 00000000 		.4byte	AccelerometerTimer_initVar
 838 030f 13       		.uleb128 0x13
 839 0310 C2030000 		.4byte	.LASF37
 840 0314 C2030000 		.4byte	.LASF37
 841 0318 02       		.byte	0x2
 842 0319 2702     		.2byte	0x227
 843 031b 14       		.uleb128 0x14
 844 031c 0A020000 		.4byte	.LASF38
 845 0320 0A020000 		.4byte	.LASF38
 846 0324 03       		.byte	0x3
 847 0325 7D       		.byte	0x7d
 848 0326 14       		.uleb128 0x14
 849 0327 55020000 		.4byte	.LASF39
 850 032b 55020000 		.4byte	.LASF39
 851 032f 03       		.byte	0x3
 852 0330 7E       		.byte	0x7e
 853 0331 00       		.byte	0
 854              		.section	.debug_abbrev,"",%progbits
 855              	.Ldebug_abbrev0:
 856 0000 01       		.uleb128 0x1
 857 0001 11       		.uleb128 0x11
 858 0002 01       		.byte	0x1
 859 0003 25       		.uleb128 0x25
 860 0004 0E       		.uleb128 0xe
 861 0005 13       		.uleb128 0x13
 862 0006 0B       		.uleb128 0xb
 863 0007 03       		.uleb128 0x3
 864 0008 0E       		.uleb128 0xe
 865 0009 1B       		.uleb128 0x1b
 866 000a 0E       		.uleb128 0xe
 867 000b 55       		.uleb128 0x55
 868 000c 17       		.uleb128 0x17
 869 000d 11       		.uleb128 0x11
 870 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 30


 871 000f 10       		.uleb128 0x10
 872 0010 17       		.uleb128 0x17
 873 0011 00       		.byte	0
 874 0012 00       		.byte	0
 875 0013 02       		.uleb128 0x2
 876 0014 24       		.uleb128 0x24
 877 0015 00       		.byte	0
 878 0016 0B       		.uleb128 0xb
 879 0017 0B       		.uleb128 0xb
 880 0018 3E       		.uleb128 0x3e
 881 0019 0B       		.uleb128 0xb
 882 001a 03       		.uleb128 0x3
 883 001b 0E       		.uleb128 0xe
 884 001c 00       		.byte	0
 885 001d 00       		.byte	0
 886 001e 03       		.uleb128 0x3
 887 001f 24       		.uleb128 0x24
 888 0020 00       		.byte	0
 889 0021 0B       		.uleb128 0xb
 890 0022 0B       		.uleb128 0xb
 891 0023 3E       		.uleb128 0x3e
 892 0024 0B       		.uleb128 0xb
 893 0025 03       		.uleb128 0x3
 894 0026 08       		.uleb128 0x8
 895 0027 00       		.byte	0
 896 0028 00       		.byte	0
 897 0029 04       		.uleb128 0x4
 898 002a 16       		.uleb128 0x16
 899 002b 00       		.byte	0
 900 002c 03       		.uleb128 0x3
 901 002d 0E       		.uleb128 0xe
 902 002e 3A       		.uleb128 0x3a
 903 002f 0B       		.uleb128 0xb
 904 0030 3B       		.uleb128 0x3b
 905 0031 05       		.uleb128 0x5
 906 0032 49       		.uleb128 0x49
 907 0033 13       		.uleb128 0x13
 908 0034 00       		.byte	0
 909 0035 00       		.byte	0
 910 0036 05       		.uleb128 0x5
 911 0037 35       		.uleb128 0x35
 912 0038 00       		.byte	0
 913 0039 49       		.uleb128 0x49
 914 003a 13       		.uleb128 0x13
 915 003b 00       		.byte	0
 916 003c 00       		.byte	0
 917 003d 06       		.uleb128 0x6
 918 003e 2E       		.uleb128 0x2e
 919 003f 00       		.byte	0
 920 0040 3F       		.uleb128 0x3f
 921 0041 19       		.uleb128 0x19
 922 0042 03       		.uleb128 0x3
 923 0043 0E       		.uleb128 0xe
 924 0044 3A       		.uleb128 0x3a
 925 0045 0B       		.uleb128 0xb
 926 0046 3B       		.uleb128 0x3b
 927 0047 0B       		.uleb128 0xb
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 31


 928 0048 27       		.uleb128 0x27
 929 0049 19       		.uleb128 0x19
 930 004a 11       		.uleb128 0x11
 931 004b 01       		.uleb128 0x1
 932 004c 12       		.uleb128 0x12
 933 004d 06       		.uleb128 0x6
 934 004e 40       		.uleb128 0x40
 935 004f 18       		.uleb128 0x18
 936 0050 9742     		.uleb128 0x2117
 937 0052 19       		.uleb128 0x19
 938 0053 00       		.byte	0
 939 0054 00       		.byte	0
 940 0055 07       		.uleb128 0x7
 941 0056 2E       		.uleb128 0x2e
 942 0057 01       		.byte	0x1
 943 0058 3F       		.uleb128 0x3f
 944 0059 19       		.uleb128 0x19
 945 005a 03       		.uleb128 0x3
 946 005b 0E       		.uleb128 0xe
 947 005c 3A       		.uleb128 0x3a
 948 005d 0B       		.uleb128 0xb
 949 005e 3B       		.uleb128 0x3b
 950 005f 05       		.uleb128 0x5
 951 0060 27       		.uleb128 0x27
 952 0061 19       		.uleb128 0x19
 953 0062 11       		.uleb128 0x11
 954 0063 01       		.uleb128 0x1
 955 0064 12       		.uleb128 0x12
 956 0065 06       		.uleb128 0x6
 957 0066 40       		.uleb128 0x40
 958 0067 18       		.uleb128 0x18
 959 0068 9742     		.uleb128 0x2117
 960 006a 19       		.uleb128 0x19
 961 006b 01       		.uleb128 0x1
 962 006c 13       		.uleb128 0x13
 963 006d 00       		.byte	0
 964 006e 00       		.byte	0
 965 006f 08       		.uleb128 0x8
 966 0070 05       		.uleb128 0x5
 967 0071 00       		.byte	0
 968 0072 03       		.uleb128 0x3
 969 0073 0E       		.uleb128 0xe
 970 0074 3A       		.uleb128 0x3a
 971 0075 0B       		.uleb128 0xb
 972 0076 3B       		.uleb128 0x3b
 973 0077 05       		.uleb128 0x5
 974 0078 49       		.uleb128 0x49
 975 0079 13       		.uleb128 0x13
 976 007a 02       		.uleb128 0x2
 977 007b 18       		.uleb128 0x18
 978 007c 00       		.byte	0
 979 007d 00       		.byte	0
 980 007e 09       		.uleb128 0x9
 981 007f 2E       		.uleb128 0x2e
 982 0080 00       		.byte	0
 983 0081 3F       		.uleb128 0x3f
 984 0082 19       		.uleb128 0x19
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 32


 985 0083 03       		.uleb128 0x3
 986 0084 0E       		.uleb128 0xe
 987 0085 3A       		.uleb128 0x3a
 988 0086 0B       		.uleb128 0xb
 989 0087 3B       		.uleb128 0x3b
 990 0088 05       		.uleb128 0x5
 991 0089 27       		.uleb128 0x27
 992 008a 19       		.uleb128 0x19
 993 008b 11       		.uleb128 0x11
 994 008c 01       		.uleb128 0x1
 995 008d 12       		.uleb128 0x12
 996 008e 06       		.uleb128 0x6
 997 008f 40       		.uleb128 0x40
 998 0090 18       		.uleb128 0x18
 999 0091 9742     		.uleb128 0x2117
 1000 0093 19       		.uleb128 0x19
 1001 0094 00       		.byte	0
 1002 0095 00       		.byte	0
 1003 0096 0A       		.uleb128 0xa
 1004 0097 2E       		.uleb128 0x2e
 1005 0098 00       		.byte	0
 1006 0099 3F       		.uleb128 0x3f
 1007 009a 19       		.uleb128 0x19
 1008 009b 03       		.uleb128 0x3
 1009 009c 0E       		.uleb128 0xe
 1010 009d 3A       		.uleb128 0x3a
 1011 009e 0B       		.uleb128 0xb
 1012 009f 3B       		.uleb128 0x3b
 1013 00a0 05       		.uleb128 0x5
 1014 00a1 27       		.uleb128 0x27
 1015 00a2 19       		.uleb128 0x19
 1016 00a3 49       		.uleb128 0x49
 1017 00a4 13       		.uleb128 0x13
 1018 00a5 11       		.uleb128 0x11
 1019 00a6 01       		.uleb128 0x1
 1020 00a7 12       		.uleb128 0x12
 1021 00a8 06       		.uleb128 0x6
 1022 00a9 40       		.uleb128 0x40
 1023 00aa 18       		.uleb128 0x18
 1024 00ab 9742     		.uleb128 0x2117
 1025 00ad 19       		.uleb128 0x19
 1026 00ae 00       		.byte	0
 1027 00af 00       		.byte	0
 1028 00b0 0B       		.uleb128 0xb
 1029 00b1 05       		.uleb128 0x5
 1030 00b2 00       		.byte	0
 1031 00b3 03       		.uleb128 0x3
 1032 00b4 0E       		.uleb128 0xe
 1033 00b5 3A       		.uleb128 0x3a
 1034 00b6 0B       		.uleb128 0xb
 1035 00b7 3B       		.uleb128 0x3b
 1036 00b8 05       		.uleb128 0x5
 1037 00b9 49       		.uleb128 0x49
 1038 00ba 13       		.uleb128 0x13
 1039 00bb 02       		.uleb128 0x2
 1040 00bc 17       		.uleb128 0x17
 1041 00bd 00       		.byte	0
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 33


 1042 00be 00       		.byte	0
 1043 00bf 0C       		.uleb128 0xc
 1044 00c0 898201   		.uleb128 0x4109
 1045 00c3 01       		.byte	0x1
 1046 00c4 11       		.uleb128 0x11
 1047 00c5 01       		.uleb128 0x1
 1048 00c6 31       		.uleb128 0x31
 1049 00c7 13       		.uleb128 0x13
 1050 00c8 00       		.byte	0
 1051 00c9 00       		.byte	0
 1052 00ca 0D       		.uleb128 0xd
 1053 00cb 8A8201   		.uleb128 0x410a
 1054 00ce 00       		.byte	0
 1055 00cf 02       		.uleb128 0x2
 1056 00d0 18       		.uleb128 0x18
 1057 00d1 9142     		.uleb128 0x2111
 1058 00d3 18       		.uleb128 0x18
 1059 00d4 00       		.byte	0
 1060 00d5 00       		.byte	0
 1061 00d6 0E       		.uleb128 0xe
 1062 00d7 898201   		.uleb128 0x4109
 1063 00da 00       		.byte	0
 1064 00db 11       		.uleb128 0x11
 1065 00dc 01       		.uleb128 0x1
 1066 00dd 31       		.uleb128 0x31
 1067 00de 13       		.uleb128 0x13
 1068 00df 00       		.byte	0
 1069 00e0 00       		.byte	0
 1070 00e1 0F       		.uleb128 0xf
 1071 00e2 2E       		.uleb128 0x2e
 1072 00e3 01       		.byte	0x1
 1073 00e4 3F       		.uleb128 0x3f
 1074 00e5 19       		.uleb128 0x19
 1075 00e6 03       		.uleb128 0x3
 1076 00e7 0E       		.uleb128 0xe
 1077 00e8 3A       		.uleb128 0x3a
 1078 00e9 0B       		.uleb128 0xb
 1079 00ea 3B       		.uleb128 0x3b
 1080 00eb 0B       		.uleb128 0xb
 1081 00ec 27       		.uleb128 0x27
 1082 00ed 19       		.uleb128 0x19
 1083 00ee 11       		.uleb128 0x11
 1084 00ef 01       		.uleb128 0x1
 1085 00f0 12       		.uleb128 0x12
 1086 00f1 06       		.uleb128 0x6
 1087 00f2 40       		.uleb128 0x40
 1088 00f3 18       		.uleb128 0x18
 1089 00f4 9742     		.uleb128 0x2117
 1090 00f6 19       		.uleb128 0x19
 1091 00f7 01       		.uleb128 0x1
 1092 00f8 13       		.uleb128 0x13
 1093 00f9 00       		.byte	0
 1094 00fa 00       		.byte	0
 1095 00fb 10       		.uleb128 0x10
 1096 00fc 34       		.uleb128 0x34
 1097 00fd 00       		.byte	0
 1098 00fe 03       		.uleb128 0x3
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 34


 1099 00ff 0E       		.uleb128 0xe
 1100 0100 3A       		.uleb128 0x3a
 1101 0101 0B       		.uleb128 0xb
 1102 0102 3B       		.uleb128 0x3b
 1103 0103 0B       		.uleb128 0xb
 1104 0104 49       		.uleb128 0x49
 1105 0105 13       		.uleb128 0x13
 1106 0106 02       		.uleb128 0x2
 1107 0107 17       		.uleb128 0x17
 1108 0108 00       		.byte	0
 1109 0109 00       		.byte	0
 1110 010a 11       		.uleb128 0x11
 1111 010b 898201   		.uleb128 0x4109
 1112 010e 01       		.byte	0x1
 1113 010f 11       		.uleb128 0x11
 1114 0110 01       		.uleb128 0x1
 1115 0111 31       		.uleb128 0x31
 1116 0112 13       		.uleb128 0x13
 1117 0113 01       		.uleb128 0x1
 1118 0114 13       		.uleb128 0x13
 1119 0115 00       		.byte	0
 1120 0116 00       		.byte	0
 1121 0117 12       		.uleb128 0x12
 1122 0118 34       		.uleb128 0x34
 1123 0119 00       		.byte	0
 1124 011a 03       		.uleb128 0x3
 1125 011b 0E       		.uleb128 0xe
 1126 011c 3A       		.uleb128 0x3a
 1127 011d 0B       		.uleb128 0xb
 1128 011e 3B       		.uleb128 0x3b
 1129 011f 0B       		.uleb128 0xb
 1130 0120 49       		.uleb128 0x49
 1131 0121 13       		.uleb128 0x13
 1132 0122 3F       		.uleb128 0x3f
 1133 0123 19       		.uleb128 0x19
 1134 0124 02       		.uleb128 0x2
 1135 0125 18       		.uleb128 0x18
 1136 0126 00       		.byte	0
 1137 0127 00       		.byte	0
 1138 0128 13       		.uleb128 0x13
 1139 0129 2E       		.uleb128 0x2e
 1140 012a 00       		.byte	0
 1141 012b 3F       		.uleb128 0x3f
 1142 012c 19       		.uleb128 0x19
 1143 012d 3C       		.uleb128 0x3c
 1144 012e 19       		.uleb128 0x19
 1145 012f 6E       		.uleb128 0x6e
 1146 0130 0E       		.uleb128 0xe
 1147 0131 03       		.uleb128 0x3
 1148 0132 0E       		.uleb128 0xe
 1149 0133 3A       		.uleb128 0x3a
 1150 0134 0B       		.uleb128 0xb
 1151 0135 3B       		.uleb128 0x3b
 1152 0136 05       		.uleb128 0x5
 1153 0137 00       		.byte	0
 1154 0138 00       		.byte	0
 1155 0139 14       		.uleb128 0x14
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 35


 1156 013a 2E       		.uleb128 0x2e
 1157 013b 00       		.byte	0
 1158 013c 3F       		.uleb128 0x3f
 1159 013d 19       		.uleb128 0x19
 1160 013e 3C       		.uleb128 0x3c
 1161 013f 19       		.uleb128 0x19
 1162 0140 6E       		.uleb128 0x6e
 1163 0141 0E       		.uleb128 0xe
 1164 0142 03       		.uleb128 0x3
 1165 0143 0E       		.uleb128 0xe
 1166 0144 3A       		.uleb128 0x3a
 1167 0145 0B       		.uleb128 0xb
 1168 0146 3B       		.uleb128 0x3b
 1169 0147 0B       		.uleb128 0xb
 1170 0148 00       		.byte	0
 1171 0149 00       		.byte	0
 1172 014a 00       		.byte	0
 1173              		.section	.debug_loc,"",%progbits
 1174              	.Ldebug_loc0:
 1175              	.LLST0:
 1176 0000 00000000 		.4byte	.LVL2
 1177 0004 06000000 		.4byte	.LVL3
 1178 0008 0100     		.2byte	0x1
 1179 000a 50       		.byte	0x50
 1180 000b 06000000 		.4byte	.LVL3
 1181 000f 09000000 		.4byte	.LVL4-1
 1182 0013 0100     		.2byte	0x1
 1183 0015 51       		.byte	0x51
 1184 0016 09000000 		.4byte	.LVL4-1
 1185 001a 10000000 		.4byte	.LFE10
 1186 001e 0400     		.2byte	0x4
 1187 0020 F3       		.byte	0xf3
 1188 0021 01       		.uleb128 0x1
 1189 0022 50       		.byte	0x50
 1190 0023 9F       		.byte	0x9f
 1191 0024 00000000 		.4byte	0
 1192 0028 00000000 		.4byte	0
 1193              	.LLST1:
 1194 002c 00000000 		.4byte	.LVL5
 1195 0030 06000000 		.4byte	.LVL6
 1196 0034 0100     		.2byte	0x1
 1197 0036 50       		.byte	0x50
 1198 0037 06000000 		.4byte	.LVL6
 1199 003b 09000000 		.4byte	.LVL7-1
 1200 003f 0100     		.2byte	0x1
 1201 0041 51       		.byte	0x51
 1202 0042 09000000 		.4byte	.LVL7-1
 1203 0046 10000000 		.4byte	.LFE12
 1204 004a 0400     		.2byte	0x4
 1205 004c F3       		.byte	0xf3
 1206 004d 01       		.uleb128 0x1
 1207 004e 50       		.byte	0x50
 1208 004f 9F       		.byte	0x9f
 1209 0050 00000000 		.4byte	0
 1210 0054 00000000 		.4byte	0
 1211              	.LLST2:
 1212 0058 14000000 		.4byte	.LVL12
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 36


 1213 005c 21000000 		.4byte	.LVL13-1
 1214 0060 0100     		.2byte	0x1
 1215 0062 50       		.byte	0x50
 1216 0063 00000000 		.4byte	0
 1217 0067 00000000 		.4byte	0
 1218              		.section	.debug_aranges,"",%progbits
 1219 0000 8C000000 		.4byte	0x8c
 1220 0004 0200     		.2byte	0x2
 1221 0006 00000000 		.4byte	.Ldebug_info0
 1222 000a 04       		.byte	0x4
 1223 000b 00       		.byte	0
 1224 000c 0000     		.2byte	0
 1225 000e 0000     		.2byte	0
 1226 0010 00000000 		.4byte	.LFB1
 1227 0014 10000000 		.4byte	.LFE1-.LFB1
 1228 0018 00000000 		.4byte	.LFB3
 1229 001c 10000000 		.4byte	.LFE3-.LFB3
 1230 0020 00000000 		.4byte	.LFB4
 1231 0024 0C000000 		.4byte	.LFE4-.LFB4
 1232 0028 00000000 		.4byte	.LFB5
 1233 002c 0C000000 		.4byte	.LFE5-.LFB5
 1234 0030 00000000 		.4byte	.LFB6
 1235 0034 0C000000 		.4byte	.LFE6-.LFB6
 1236 0038 00000000 		.4byte	.LFB7
 1237 003c 0C000000 		.4byte	.LFE7-.LFB7
 1238 0040 00000000 		.4byte	.LFB8
 1239 0044 0C000000 		.4byte	.LFE8-.LFB8
 1240 0048 00000000 		.4byte	.LFB9
 1241 004c 10000000 		.4byte	.LFE9-.LFB9
 1242 0050 00000000 		.4byte	.LFB10
 1243 0054 10000000 		.4byte	.LFE10-.LFB10
 1244 0058 00000000 		.4byte	.LFB11
 1245 005c 10000000 		.4byte	.LFE11-.LFB11
 1246 0060 00000000 		.4byte	.LFB12
 1247 0064 10000000 		.4byte	.LFE12-.LFB12
 1248 0068 00000000 		.4byte	.LFB13
 1249 006c 18000000 		.4byte	.LFE13-.LFB13
 1250 0070 00000000 		.4byte	.LFB14
 1251 0074 14000000 		.4byte	.LFE14-.LFB14
 1252 0078 00000000 		.4byte	.LFB0
 1253 007c 38000000 		.4byte	.LFE0-.LFB0
 1254 0080 00000000 		.4byte	.LFB2
 1255 0084 1C000000 		.4byte	.LFE2-.LFB2
 1256 0088 00000000 		.4byte	0
 1257 008c 00000000 		.4byte	0
 1258              		.section	.debug_ranges,"",%progbits
 1259              	.Ldebug_ranges0:
 1260 0000 00000000 		.4byte	.LFB1
 1261 0004 10000000 		.4byte	.LFE1
 1262 0008 00000000 		.4byte	.LFB3
 1263 000c 10000000 		.4byte	.LFE3
 1264 0010 00000000 		.4byte	.LFB4
 1265 0014 0C000000 		.4byte	.LFE4
 1266 0018 00000000 		.4byte	.LFB5
 1267 001c 0C000000 		.4byte	.LFE5
 1268 0020 00000000 		.4byte	.LFB6
 1269 0024 0C000000 		.4byte	.LFE6
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 37


 1270 0028 00000000 		.4byte	.LFB7
 1271 002c 0C000000 		.4byte	.LFE7
 1272 0030 00000000 		.4byte	.LFB8
 1273 0034 0C000000 		.4byte	.LFE8
 1274 0038 00000000 		.4byte	.LFB9
 1275 003c 10000000 		.4byte	.LFE9
 1276 0040 00000000 		.4byte	.LFB10
 1277 0044 10000000 		.4byte	.LFE10
 1278 0048 00000000 		.4byte	.LFB11
 1279 004c 10000000 		.4byte	.LFE11
 1280 0050 00000000 		.4byte	.LFB12
 1281 0054 10000000 		.4byte	.LFE12
 1282 0058 00000000 		.4byte	.LFB13
 1283 005c 18000000 		.4byte	.LFE13
 1284 0060 00000000 		.4byte	.LFB14
 1285 0064 14000000 		.4byte	.LFE14
 1286 0068 00000000 		.4byte	.LFB0
 1287 006c 38000000 		.4byte	.LFE0
 1288 0070 00000000 		.4byte	.LFB2
 1289 0074 1C000000 		.4byte	.LFE2
 1290 0078 00000000 		.4byte	0
 1291 007c 00000000 		.4byte	0
 1292              		.section	.debug_line,"",%progbits
 1293              	.Ldebug_line0:
 1294 0000 79010000 		.section	.debug_str,"MS",%progbits,1
 1294      02005A00 
 1294      00000201 
 1294      FB0E0D00 
 1294      01010101 
 1295              	.LASF36:
 1296 0000 41636365 		.ascii	"AccelerometerTimer_Start\000"
 1296      6C65726F 
 1296      6D657465 
 1296      7254696D 
 1296      65725F53 
 1297              	.LASF30:
 1298 0019 41636365 		.ascii	"AccelerometerTimer_ReadCapture\000"
 1298      6C65726F 
 1298      6D657465 
 1298      7254696D 
 1298      65725F52 
 1299              	.LASF23:
 1300 0038 41636365 		.ascii	"AccelerometerTimer_SetInterruptMode\000"
 1300      6C65726F 
 1300      6D657465 
 1300      7254696D 
 1300      65725F53 
 1301              	.LASF29:
 1302 005c 70657269 		.ascii	"period\000"
 1302      6F6400
 1303              	.LASF31:
 1304 0063 41636365 		.ascii	"AccelerometerTimer_WriteCounter\000"
 1304      6C65726F 
 1304      6D657465 
 1304      7254696D 
 1304      65725F57 
 1305              	.LASF3:
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 38


 1306 0083 73686F72 		.ascii	"short unsigned int\000"
 1306      7420756E 
 1306      7369676E 
 1306      65642069 
 1306      6E7400
 1307              	.LASF13:
 1308 0096 63686172 		.ascii	"char\000"
 1308      00
 1309              	.LASF42:
 1310 009b 433A5C55 		.ascii	"C:\\Users\\sebbe\\Desktop\\spi_slave_v15\\sensor_re"
 1310      73657273 
 1310      5C736562 
 1310      62655C44 
 1310      65736B74 
 1311 00c9 6164696E 		.ascii	"ading_unit\\spi_slave.cydsn\000"
 1311      675F756E 
 1311      69745C73 
 1311      70695F73 
 1311      6C617665 
 1312              	.LASF11:
 1313 00e4 666C6F61 		.ascii	"float\000"
 1313      7400
 1314              	.LASF32:
 1315 00ea 636F756E 		.ascii	"counter\000"
 1315      74657200 
 1316              	.LASF7:
 1317 00f2 6C6F6E67 		.ascii	"long long unsigned int\000"
 1317      206C6F6E 
 1317      6720756E 
 1317      7369676E 
 1317      65642069 
 1318              	.LASF1:
 1319 0109 756E7369 		.ascii	"unsigned char\000"
 1319      676E6564 
 1319      20636861 
 1319      7200
 1320              	.LASF27:
 1321 0117 41636365 		.ascii	"AccelerometerTimer_ReadPeriod\000"
 1321      6C65726F 
 1321      6D657465 
 1321      7254696D 
 1321      65725F52 
 1322              	.LASF43:
 1323 0135 41636365 		.ascii	"AccelerometerTimer_interruptState\000"
 1323      6C65726F 
 1323      6D657465 
 1323      7254696D 
 1323      65725F69 
 1324              	.LASF14:
 1325 0157 72656738 		.ascii	"reg8\000"
 1325      00
 1326              	.LASF20:
 1327 015c 41636365 		.ascii	"AccelerometerTimer_SoftwareCapture\000"
 1327      6C65726F 
 1327      6D657465 
 1327      7254696D 
 1327      65725F53 
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 39


 1328              	.LASF5:
 1329 017f 6C6F6E67 		.ascii	"long unsigned int\000"
 1329      20756E73 
 1329      69676E65 
 1329      6420696E 
 1329      7400
 1330              	.LASF35:
 1331 0191 41636365 		.ascii	"AccelerometerTimer_Init\000"
 1331      6C65726F 
 1331      6D657465 
 1331      7254696D 
 1331      65725F49 
 1332              	.LASF9:
 1333 01a9 75696E74 		.ascii	"uint8\000"
 1333      3800
 1334              	.LASF26:
 1335 01af 636F6E74 		.ascii	"control\000"
 1335      726F6C00 
 1336              	.LASF21:
 1337 01b7 41636365 		.ascii	"AccelerometerTimer_ReadStatusRegister\000"
 1337      6C65726F 
 1337      6D657465 
 1337      7254696D 
 1337      65725F52 
 1338              	.LASF12:
 1339 01dd 646F7562 		.ascii	"double\000"
 1339      6C6500
 1340              	.LASF28:
 1341 01e4 41636365 		.ascii	"AccelerometerTimer_WritePeriod\000"
 1341      6C65726F 
 1341      6D657465 
 1341      7254696D 
 1341      65725F57 
 1342              	.LASF10:
 1343 0203 75696E74 		.ascii	"uint32\000"
 1343      333200
 1344              	.LASF38:
 1345 020a 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1345      74657243 
 1345      72697469 
 1345      63616C53 
 1345      65637469 
 1346              	.LASF8:
 1347 0221 756E7369 		.ascii	"unsigned int\000"
 1347      676E6564 
 1347      20696E74 
 1347      00
 1348              	.LASF22:
 1349 022e 41636365 		.ascii	"AccelerometerTimer_ReadControlRegister\000"
 1349      6C65726F 
 1349      6D657465 
 1349      7254696D 
 1349      65725F52 
 1350              	.LASF39:
 1351 0255 43794578 		.ascii	"CyExitCriticalSection\000"
 1351      69744372 
 1351      69746963 
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 40


 1351      616C5365 
 1351      6374696F 
 1352              	.LASF24:
 1353 026b 41636365 		.ascii	"AccelerometerTimer_WriteControlRegister\000"
 1353      6C65726F 
 1353      6D657465 
 1353      7254696D 
 1353      65725F57 
 1354              	.LASF41:
 1355 0293 47656E65 		.ascii	"Generated_Source\\PSoC5\\AccelerometerTimer.c\000"
 1355      72617465 
 1355      645F536F 
 1355      75726365 
 1355      5C50536F 
 1356              	.LASF40:
 1357 02bf 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1357      43313120 
 1357      352E342E 
 1357      31203230 
 1357      31363036 
 1358 02f2 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1358      20726576 
 1358      6973696F 
 1358      6E203233 
 1358      37373135 
 1359 0325 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1359      66756E63 
 1359      74696F6E 
 1359      2D736563 
 1359      74696F6E 
 1360              	.LASF17:
 1361 034d 73697A65 		.ascii	"sizetype\000"
 1361      74797065 
 1361      00
 1362              	.LASF19:
 1363 0356 41636365 		.ascii	"AccelerometerTimer_Stop\000"
 1363      6C65726F 
 1363      6D657465 
 1363      7254696D 
 1363      65725F53 
 1364              	.LASF44:
 1365 036e 41636365 		.ascii	"AccelerometerTimer_initVar\000"
 1365      6C65726F 
 1365      6D657465 
 1365      7254696D 
 1365      65725F69 
 1366              	.LASF6:
 1367 0389 6C6F6E67 		.ascii	"long long int\000"
 1367      206C6F6E 
 1367      6720696E 
 1367      7400
 1368              	.LASF25:
 1369 0397 696E7465 		.ascii	"interruptMode\000"
 1369      72727570 
 1369      744D6F64 
 1369      6500
 1370              	.LASF34:
ARM GAS  C:\Users\sebbe\AppData\Local\Temp\cc6FojuW.s 			page 41


 1371 03a5 41636365 		.ascii	"AccelerometerTimer_ClearFIFO\000"
 1371      6C65726F 
 1371      6D657465 
 1371      7254696D 
 1371      65725F43 
 1372              	.LASF37:
 1373 03c2 43795365 		.ascii	"CySetReg24\000"
 1373      74526567 
 1373      323400
 1374              	.LASF2:
 1375 03cd 73686F72 		.ascii	"short int\000"
 1375      7420696E 
 1375      7400
 1376              	.LASF4:
 1377 03d7 6C6F6E67 		.ascii	"long int\000"
 1377      20696E74 
 1377      00
 1378              	.LASF15:
 1379 03e0 72656733 		.ascii	"reg32\000"
 1379      3200
 1380              	.LASF16:
 1381 03e6 6C6F6E67 		.ascii	"long double\000"
 1381      20646F75 
 1381      626C6500 
 1382              	.LASF0:
 1383 03f2 7369676E 		.ascii	"signed char\000"
 1383      65642063 
 1383      68617200 
 1384              	.LASF18:
 1385 03fe 41636365 		.ascii	"AccelerometerTimer_Enable\000"
 1385      6C65726F 
 1385      6D657465 
 1385      7254696D 
 1385      65725F45 
 1386              	.LASF33:
 1387 0418 41636365 		.ascii	"AccelerometerTimer_ReadCounter\000"
 1387      6C65726F 
 1387      6D657465 
 1387      7254696D 
 1387      65725F52 
 1388              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
